---
- name: resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'

- name: install Miniconda OS pkg dependencies
  become: '{{ miniconda_escalate }}'
  become_user: root
  with_items: '{{ miniconda_dep_pkgs | default([]) }}'
  loop_control:
    loop_var: miniconda_os_pkg
  package:
    state: present
    name: '{{ miniconda_os_pkg }}'

- name: check for installation of Miniconda
  become: '{{ miniconda_escalate }}'
  stat:
    path: '{{  miniconda_conda_bin  }}'
  changed_when: false
  register: miniconda_conda_binary

- when: not miniconda_conda_binary.stat.exists
  block:
    - name: download installer...
      become: '{{ miniconda_escalate }}'
      become_user: root
      get_url:
        url: '{{ miniconda_installer_url }}'
        dest: /tmp/{{ miniconda_installer_sh }}
        timeout: '{{ miniconda_timeout_seconds }}'
        checksum: '{{ miniconda_checksum }}'
        mode: 0755

    - name: installing....
      become: '{{ miniconda_escalate }}'
      become_user: root
      command: bash /tmp/{{ miniconda_installer_sh }} -b -p {{ miniconda_install_dir }}
      args:
        creates: '{{ miniconda_install_dir }}'

    - name: link miniconda...
      become: '{{ miniconda_escalate }}'
      become_user: root
      file:
        src: '{{ miniconda_install_dir }}'
        dest: '{{ miniconda_link_dir }}'
        state: link

  always:
    - name: deleting installer...
      become: '{{ miniconda_escalate }}'
      become_user: root
      file:
        path: /tmp/{{ miniconda_installer_sh }}
        state: absent

- name: update conda pkgs...
  become: '{{ miniconda_escalate }}'
  become_user: root
  when: miniconda_pkg_update
  command: '{{ miniconda_conda_bin }} update -y --all'

- name: remove conda-curl since it conflicts with the system curl
  when: miniconda_make_sys_default
  become: yes
  become_user: root
  conda:
    name: curl
    state: absent
    executable: '{{ miniconda_conda_bin }}'

- name: make system default python etc...
  when: miniconda_make_sys_default
  become: yes
  become_user: root
  with_items:
    - f: miniconda.sh
      d: /etc/profile.d
  template:
    src: '{{ item.f }}.j2'
    dest: '{{ item.d }}/{{ item.f }}'
    mode: '{{ item.m|default("0644") }}'

- name: disable auto updates of conda and dependencies
  when: miniconda_disable_auto_updates
  with_items:
    - l: 'update_dependencies: False'
    - l: 'auto_update_conda: False'
  lineinfile:
    path: '/etc/conda/.condarc'
    line: '{{ item.l }}'
    state: present
    create: yes
